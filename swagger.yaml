openapi: 3.0.1
info:
  title: MÃ³dulo IOT - API
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/sensores:
    get:
      tags:
      - Sensores
      summary: Devuelve una lista con todos los sensores.
      operationId: getSensores
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
    post:
      tags:
      - Sensores
      summary: Inserta un nuevo sensor.
      operationId: postSensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorContext'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Sensor'
  /api/registros:
    get:
      tags:
      - Registros
      summary: Devuelve una lista con todos los registros de los sensores.
      operationId: getRegistros
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registro'
    post:
      tags:
      - Registros
      summary: Inserta un nuevo registro.
      operationId: postRegistro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroContext'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Registro'
  /api/areas:
    get:
      tags:
      - Areas
      summary: Devuelve una lista con todas las areas de la escuela.
      operationId: getAreas
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
    post:
      tags:
      - Areas
      summary: Inserta una nueva area.
      operationId: postArea
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Area'
  /api/sensores/tipos/{tipo}:
    get:
      tags:
      - Sensores
      summary: Devuelve una lista con todos los sensores segun el tipo.
      operationId: getSensorPorTipo
      parameters:
      - name: tipo
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
  /api/sensores/ids/{id}:
    get:
      tags:
      - Sensores
      summary: Devuelve el sensor segun el ID indicado.
      operationId: getSensor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Sensor'
    delete:
      tags:
      - Sensores
      summary: Elimina el sensor con el ID indicado.
      operationId: deleteSensor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Sensor'
  /api/registros/ids/{id}:
    get:
      tags:
      - Registros
      summary: Devuelve el registro segun el ID indicado.
      operationId: getRegistro
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Registro'
    delete:
      tags:
      - Registros
      summary: Elimina el registro con el ID indicado.
      operationId: deleteRegistro
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Registro'
  /api/areas/puertas-abiertas:
    get:
      tags:
      - Areas
      summary: Devuelve una lista de las areas que tengan su puerta abierta.
      operationId: getAreaPuertasAbiertas
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
  /api/areas/ids/{id}:
    get:
      tags:
      - Areas
      summary: "Devuelve el area, junto con sus sensores, segun el ID indicado."
      operationId: getArea
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Area'
    delete:
      tags:
      - Areas
      summary: Elimina el area con el ID indicado.
      operationId: deleteArea
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Area'
  /api/sensores/tipos/{id}:
    delete:
      tags:
      - Sensores
      summary: Elimina los sensores segun el tipo.
      operationId: deleteSensorPorTipo
      parameters:
      - name: tipo
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Unauthorized
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        exception:
          type: string
        message:
          type: string
        path:
          type: string
    SensorContext:
      required:
      - areaId
      - descripcion
      - tipo
      - unidadDeMedida
      type: object
      properties:
        tipo:
          type: string
        unidadDeMedida:
          type: string
        descripcion:
          type: string
        areaId:
          type: integer
          format: int64
    Registro:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fecha:
          type: string
          format: date-time
        unidad:
          type: string
        valor:
          type: number
          format: double
        frecuencia:
          type: number
          format: double
    Sensor:
      required:
      - descripcion
      - tipo
      - unidadDeMedida
      type: object
      properties:
        id:
          type: integer
          format: int64
        tipo:
          type: string
        unidadDeMedida:
          type: string
        descripcion:
          type: string
        registros:
          type: array
          items:
            $ref: '#/components/schemas/Registro'
    RegistroContext:
      required:
      - fecha
      - frecuencia
      - sensorID
      - unidad
      - valor
      type: object
      properties:
        fecha:
          type: string
          format: date-time
        unidad:
          type: string
        frecuencia:
          type: number
          format: double
        valor:
          type: number
          format: double
        sensorID:
          type: integer
          format: int64
    Area:
      required:
      - descripcion
      - nombre
      - piso
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        piso:
          type: integer
          format: int32
        descripcion:
          type: string
        sensores:
          type: array
          items:
            $ref: '#/components/schemas/Sensor'
