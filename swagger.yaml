openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/sensores:
    get:
      tags:
        - sensor-controller
      summary: Devuelve una lista con todos los sensores.
      operationId: getSensores
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sensor"
    post:
      tags:
        - sensor-controller
      summary: Inserta un nuevo sensor.
      operationId: postSensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SensorContext"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sensor"
  /api/areas:
    get:
      tags:
        - area-controller
      summary: Devuelve una lista con todas las areas de la escuela.
      operationId: getAreas
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Area"
    post:
      tags:
        - area-controller
      summary: Inserta una nueva area.
      operationId: postArea
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Area"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Area"
  /api/sensores/tipos:
    get:
      tags:
        - sensor-controller
      summary: Devuelve una lista con todos los sensores segun el tipo.
      operationId: getSensorPorTipo
      parameters:
        - name: tipo
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sensor"
    delete:
      tags:
        - sensor-controller
      summary: Elimina los sensores segun el tipo.
      operationId: deleteSensorPorTipo
      parameters:
        - name: tipo
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sensor"
  /api/sensores/ids:
    get:
      tags:
        - sensor-controller
      summary: Devuelve el sensor segun el ID indicado.
      operationId: getSensor
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sensor"
    delete:
      tags:
        - sensor-controller
      summary: Elimina el sensor con el ID indicado.
      operationId: deleteSensor
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sensor"
  /api/areas/ids:
    get:
      tags:
        - area-controller
      summary: "Devuelve el area, junto con sus sensores, segun el ID indicado."
      operationId: getArea
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Area"
    delete:
      tags:
        - area-controller
      summary: Elimina el area con el ID indicado.
      operationId: deleteArea
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Area"
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        exception:
          type: string
        message:
          type: string
        path:
          type: string
    Registro:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fecha:
          type: string
          format: date-time
        unidad:
          type: string
        frecuencia:
          type: number
          format: double
        valor:
          type: number
          format: double
    Sensor:
      required:
        - descripcion
        - tipo
        - unidadDeMedida
      type: object
      properties:
        id:
          type: integer
          format: int64
        tipo:
          type: string
        unidadDeMedida:
          type: string
        descripcion:
          type: string
        registros:
          type: array
          items:
            $ref: "#/components/schemas/Registro"
    Area:
      required:
        - descripcion
        - nombre
        - piso
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        piso:
          type: integer
          format: int32
        descripcion:
          type: string
        sensores:
          type: array
          items:
            $ref: "#/components/schemas/Sensor"
